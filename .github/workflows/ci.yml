name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build:
    name: "Build and Test"
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node: [18, 20]

    steps:
      - uses: actions/checkout@v4

      # - name: Setup Node.js | ${{ matrix.node }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - run: npm install
      - run: npm test

      - name: Generate Tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Create .env File
        run: echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github-actions-role
          aws-region: us-east-2

      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Docker Image ECR
        id: build-image
        env:
          REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com
          TAG: ${{ steps.generate_tag.outputs.sha }}
        run: |
          docker build -t $REGISTRY/devops-ci:$TAG .
          docker push $REGISTRY/devops-ci:$TAG
          IMAGE=$(echo $REGISTRY/devops-ci:$TAG)
          echo "image-url=$IMAGE" >> $GITHUB_OUTPUT

      - name: Deploy to App Runner
        env:
          IMAGE_URL: ${{ steps.build-image.outputs.image-url }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          aws apprunner create-service --cli-input-json '{
            "ServiceName": "devops-ci",
            "SourceConfiguration": {
              "AuthenticationConfiguration": {
                "AccessRoleArn": "arn:aws:iam::${AWS_ACCOUNT_ID}:role/github-actions-role"
              },
              "ImageRepository": {
                "ImageIdentifier": "'${IMAGE_URL}'",
                "ImageRepositoryType": "ECR",
                "ImageConfiguration": {
                  "Port": "3000"
                }
              }
            },
            "InstanceConfiguration": {
              "Cpu": "1 vCPU",
              "Memory": "2 GB"
            }
          }'

      # - name: Login Into The Container Registry
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build Docker Image
      #   uses: docker/build-push-action@v6.11.0
      #   with:
      #     context: .
      #     file: Dockerfile
      #     push: true
      #     tags: ericl123/rocketseat-ci-api:${{ steps.generate_tag.outputs.sha }}, ericl123/rocketseat-ci-api:latest
